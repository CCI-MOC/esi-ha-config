---
- hosts: esi_ha_cluster
  tags: [prep, prep.host]
  gather_facts: true
  become: true
  tasks:
    - name: get information about root mountpoint
      set_fact:
        root_mount_info: "{{ ansible_mounts|selectattr('mount', 'eq', '/')|first }}"

    - name: resize root filesystem if necessary
      when: root_mount_info.size_total < expected_rootfs_size
      block:
        - name: get block device info
          set_fact:
            root_block_device: "{{ root_mount_info.device|regex_replace('[0-9]*', '') }}"
            root_partition: "{{ root_mount_info.device|regex_replace('/dev/[a-z]*', '') }}"

        - name: resize root partition
          command: >-
            growpart {{ root_block_device }} {{ root_partition }}

        - name: grow root filesystem
          command: >-
            xfs_growfs /

    - name: get current hostname
      command: hostname -f
      register: hostname
      changed_when: false

    - name: set hostname to inventory hostname
      command: hostnamectl set-hostname {{ inventory_hostname }}
      when: hostname.stdout != inventory_hostname

    - name: ensure entry in /etc/hosts
      lineinfile:
        path: /etc/hosts
        line: |-
          {{ ansible_default_ipv4.address }}  {{ inventory_hostname }}

- hosts: esi_ha_cluster
  tags: [prep, prep.net]
  become: true
  tasks:
    - name: remove unused connections
      nmcli:
        conn_name: '{{ item }}'
        state: absent
      loop:
        - 'Wired connection 1'
        - 'ens3'

    - name: configure dns servers
      nmcli:
        conn_name: 'System eth0'
        state: present
        type: ethernet
        dns4:
          - 8.8.8.8
          - 8.8.4.4

    - name: check for nameservers in resolv.conf
      command: >-
        grep 8.8.8.8 /etc/resolv.conf
      register: resolv
      failed_when: false
      changed_when: resolv.rc != 0

    - name: refresh interface
      shell: >-
        nmcli c down 'System eth0' && nmcli c up 'System eth0'

- hosts: esi_controller
  tags: [prep, prep.net]
  become: true
  tasks:
    - name: configure ctlplane connection
      nmcli:
        conn_name: 'System eth1'
        state: present
        type: ethernet
        ifname: '{{ ctlplane_interface }}'
        ip4: "{{ ctlplane_ip }}"

- hosts: esi_ha_cluster
  tags: [prep, prep.user]
  become: true
  tasks:
    - name: create stack user
      user:
        name: stack
        generate_ssh_key: true
        ssh_key_bits: 4096

    - name: configure stack user authorized_keys
      authorized_key:
        user: stack
        key: "{{ item }}"
      loop: "{{ stack_authorized_keys }}"

    - name: enable sudo access for stack user
      copy:
        dest: /etc/sudoers.d/stack
        content: |-
          stack ALL=(root) NOPASSWD:ALL
        mode: 0440
        owner: root
        group: root

- hosts: esi_undercloud
  tags: [prep, prep.user]
  vars:
    ansible_user: stack
  tasks:
    - name: fetch undercloud ssh public key
      fetch:
        src: ./.ssh/id_rsa.pub
        dest: undercloud_rsa.pub
        flat: true

- hosts: esi_controller
  tags: [prep, prep.user]
  tasks:
    - name: install undercloud public key
      authorized_key:
        user: stack
        key: "{{ lookup('file', 'undercloud_rsa.pub') }}"

- hosts: esi_ha_cluster
  tags: [prep, prep.packages]
  tasks:

    ## LKS: we're using 'dnf' instead of 'package' because we need
    ## disable_gpg_check. Consider pre-fetching the keys instead.
    - name: install tripleo-repos
      dnf:
        name: "{{ tripleo_repos_url }}"
        state: installed
        disable_gpg_check: true

    - name: activate openstack repostories
      command: >-
        tripleo-repos -b {{ openstack_release }} current ceph

    - name: upgrade packages
      package:
        name: '*'
        state: latest

- hosts: esi_undercloud
  tags: [prep, prep.packages]
  become: true
  tasks:
    - name: install tripleo packages
      dnf:
        name: "{{ packages }}"
      vars:
        packages:
          - python3-tripleoclient
          - ceph-ansible

- hosts: esi_controller
  tags: [prep, prep.pacakges]
  become: true
  tasks:
    - name: install tripleo packages
      dnf:
        name: "{{ packages }}"
      vars:
        packages:
          - python3-heat-agent
          - python3-heat-agent-ansible
          - python3-heat-agent-apply-config
          - python3-heat-agent-docker-cmd
          - python3-heat-agent-hiera
          - python3-heat-agent-json-file
          - python3-heat-agent-puppet

- hosts: esi_undercloud
  tags: [prep, prep.undercloud]
  vars:
    ansible_user: stack

  tasks:
    - name: fetch undercloud.conf.sample
      fetch:
        src: /usr/share/python-tripleoclient/undercloud.conf.sample
        dest: ./undercloud.conf.sample
        flat: true

    - name: install undercloud.conf
      copy:
        src: undercloud.conf
        dest: undercloud.conf

    - name: install hiera overrides
      copy:
        src: hiera-overrides.yml
        dest: ./hiera-overrides.yml

######################################################################

- hosts: esi_undercloud
  tags: [check.undercloud_complete]
  vars:
    ansible_user: stack
  tasks:
    - name: check if stackrc exists
      stat:
        path: ./stackrc
      register: stackrc

    - name: fail if undercloud install is not complete
      assert:
        that: stackrc.stat.exists

######################################################################

- hosts: esi_undercloud
  tags: [preinst, preinst.ssl]
  tasks:
    - name: get undercloud ca certificate
      fetch:
        src: /etc/pki/ca-trust/source/anchors/cm-local-ca.pem
        dest: undercloud-ca.pem
        flat: true

- hosts: esi_controller
  tags: [preinst, preinst.ssl]
  tasks:
    - name: install undercloud ca certificate
      copy:
        src: undercloud-ca.pem
        dest: /etc/pki/ca-trust/source/anchors/
      register: cert

    - name: update ca trust
      when: cert is changed or force_update_ca_trust|default(false)|bool
      command: >-
        update-ca-trust extract

- hosts: esi_controller
  tags: [preinst, preinst.api]
  tasks:
    - name: verify connectivity to heat api
      uri:
        url: https://esi-undercloud.massopen.cloud:13004
        status_code:
          - 300

    - name: verify connectivity to swift api
      uri:
        url: https://esi-undercloud.massopen.cloud:13808
        status_code:
          - 404

- hosts: esi_undercloud
  tags: [preinst, preinst.templates]
  vars:
    ansible_user: stack
  roles:
    - install_config
  tasks:
    - name: install overcloud-deploy.sh script
      copy:
        src: overcloud-deploy.sh
        dest: ./overcloud-deploy.sh
        mode: 0755
